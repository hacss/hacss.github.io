_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[16],{"9Tsb":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return b}));var a=n("rePB"),l=n("Ff2n"),i=(n("q1tI"),n("7ljp")),o=n("xFV3");function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){Object(a.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var s={};function b(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(i.b)("wrapper",c(c(c({},s),n),{},{components:t,mdxType:"MDXLayout"}),Object(i.b)(o.a,{title:"Syntax",subtitle:"How to use Hacss within your code",mdxType:"Article"},Object(i.b)("p",null,"Hacss uses a style rule syntax resembling CSS embedded within HTML classes. For\nthe most part, your existing CSS knowledge still applies. However, the use of\nstatically-analyzed HTML classes introduces some minor, but important\nconstraints:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Whitespace is strictly forbidden. Since some CSS values (e.g.\n",Object(i.b)("a",c({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow"}),"box shadows"),")\nrequire whitespace, you can use a pair of underscores (",Object(i.b)("inlineCode",{parentName:"p"},"__"),") in place of a\nspace character.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Dynamically-generated class names are not supported because Hacss generates\nthe style sheet at build time. In practice, this is not much of a limitation,\nparticularly if you make good use of selectors, described below.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Hacss supports a large subset, but not all, of CSS. This guide will help you\nto understand which features are supported."))),Object(i.b)("h3",null,"Rules"),Object(i.b)("p",null,"A rule can include:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"declarations only, e.g. ",Object(i.b)("inlineCode",{parentName:"li"},"background:red;color:white;")),Object(i.b)("li",{parentName:"ul"},"a selector, e.g. ",Object(i.b)("inlineCode",{parentName:"li"},".err{background:red;color:white}")),Object(i.b)("li",{parentName:"ul"},"an at-scope, e.g. ",Object(i.b)("inlineCode",{parentName:"li"},"@sm{padding:0}")),Object(i.b)("li",{parentName:"ul"},"a combination of a selector and an at-scope, e.g. ",Object(i.b)("inlineCode",{parentName:"li"},"@sm{.err{width:100%}}"))),Object(i.b)("p",null,"Note that declarations are always separated by semicolons. A rule consisting\n",Object(i.b)("em",{parentName:"p"},"only")," of declarations is also terminated by a semicolon; however, the trailing\nsemicolon must be omitted for a rule that includes a selector and/or at-scope\nbecause the closing curly brace thereof tells Hacss where the declarations end."),Object(i.b)("h3",null,"Selectors"),Object(i.b)("p",null,"Selectors are actually useful within inline styles because they allow you to\nactivate various style rules conditionally, similar to what might otherwise be\naccomplished with JavaScript or an external style sheet. They can also be used\nto create pseudo-elements, which can sometimes optimize your markup for\naccessibility or performance."),Object(i.b)("p",null,"Selectors can include:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"a context"),Object(i.b)("li",{parentName:"ul"},"a class list"),Object(i.b)("li",{parentName:"ul"},"a pseudo-element")),Object(i.b)("h4",null,"Context"),Object(i.b)("p",null,"A context describes the element's relationship to another element in the DOM\ntree. It consists of a class list followed by a combinator."),Object(i.b)("h5",null,"Available combinators"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Ancestor: ",Object(i.b)("inlineCode",{parentName:"li"},"_")),Object(i.b)("li",{parentName:"ul"},"Parent: ",Object(i.b)("inlineCode",{parentName:"li"},">")),Object(i.b)("li",{parentName:"ul"},"Adjacent sibling: ",Object(i.b)("inlineCode",{parentName:"li"},"+")),Object(i.b)("li",{parentName:"ul"},"General sibling: ",Object(i.b)("inlineCode",{parentName:"li"},"~"))),Object(i.b)("h4",null,"Class List"),Object(i.b)("p",null,"A class list consists of a series of named classes followed by a series of\npseudo-classes."),Object(i.b)("p",null,"Named classes begin with a ",Object(i.b)("inlineCode",{parentName:"p"},".")," and consist of lowercase letters and hyphens."),Object(i.b)("p",null,"Pseudo-classes begin with a ",Object(i.b)("inlineCode",{parentName:"p"},":")," and consist of either:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"lowercase letters and hyphens"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"not(classes)")," where ",Object(i.b)("inlineCode",{parentName:"li"},"classes")," is a class list"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"nth-child(expr)"),", ",Object(i.b)("inlineCode",{parentName:"li"},"nth-last-child(expr)"),", ",Object(i.b)("inlineCode",{parentName:"li"},"nth-last-of-type(expr)"),", or\n",Object(i.b)("inlineCode",{parentName:"li"},"nth-of-type(expr)"),", where ",Object(i.b)("inlineCode",{parentName:"li"},"expr")," is a formula like ",Object(i.b)("inlineCode",{parentName:"li"},"even"),", ",Object(i.b)("inlineCode",{parentName:"li"},"odd"),", ",Object(i.b)("inlineCode",{parentName:"li"},"2n+1"),",\netc."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"lang(code)"),", where ",Object(i.b)("inlineCode",{parentName:"li"},"code")," is a standard language code like ",Object(i.b)("inlineCode",{parentName:"li"},"en"),", ",Object(i.b)("inlineCode",{parentName:"li"},"en-US"),",\netc.")),Object(i.b)("p",null,"Named classes and pseudo-classes are each optional components of a class list."),Object(i.b)("h4",null,"Pseudo-element"),Object(i.b)("p",null,"A pseudo-element consists of ",Object(i.b)("inlineCode",{parentName:"p"},"::"),", followed by lowercase letters and hyphens.\nExamples of pseudo-elements include:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"::after")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"::placeholder"))),Object(i.b)("h4",null,"Selector examples"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".err{color:red}")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":nth-child(odd){background:$gray50}")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".err_:disabled{color:pink}")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":checked~{text-decoration:line-through}")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"::placeholder{color:$gray50}"))),Object(i.b)("h3",null,"At-scopes"),Object(i.b)("p",null,"At-scopes consist of ",Object(i.b)("inlineCode",{parentName:"p"},"@")," followed by lowercase letters and hyphens. You can use\nthem for\n",Object(i.b)("a",c({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@media"}),"media queries")," and\n",Object(i.b)("a",c({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@supports"}),"feature queries"),".\nEach at-scope must be added to your ",Object(i.b)("a",c({parentName:"p"},{href:"/docs/configuration"}),"Hacss configuration"),".\nNote that the ",Object(i.b)("inlineCode",{parentName:"p"},"@")," character is omitted within configuration."),Object(i.b)("h3",null,"Variables"),Object(i.b)("p",null,"Variables consist of ",Object(i.b)("inlineCode",{parentName:"p"},"$")," followed by lowercase letters and hyphens. You can use\nvariables as CSS values or even interpolate them into other values. For example:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"color:$red500;")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"left:calc(50%+#{$len4});"))),Object(i.b)("p",null,"Variables must be included in your ",Object(i.b)("a",c({parentName:"p"},{href:"/docs/configuration"}),"Hacss configuration"),".\nNote that the ",Object(i.b)("inlineCode",{parentName:"p"},"$")," character is omitted wthin configuration."),Object(i.b)("h3",null,"Priority"),Object(i.b)("p",null,"Hacss places at-scope rules at the end of the generated style sheet; but, beyond\nthat, it offers no rule ordering guarantees. You should use\n",Object(i.b)("a",c({parentName:"p"},{href:"https://www.w3.org/TR/selectors-3/#specificity"}),"specificity")," instead to\nprioritize rules."),Object(i.b)("p",null,"Sometimes two rules have the same specificity by default, and it is necessary to\nincrease the specificity of one of them. For example, ",Object(i.b)("inlineCode",{parentName:"p"},":hover{color:blue}")," and\n",Object(i.b)("inlineCode",{parentName:"p"},":active{color:red}")," have the same specificity, but you might want the red color\nto be applied when both selectors match."),Object(i.b)("p",null,"To increase the specificity of any rule, simply attach an exclamation point to\nthe end, e.g. ",Object(i.b)("inlineCode",{parentName:"p"},":active{color:red}!")," or ",Object(i.b)("inlineCode",{parentName:"p"},"display:none;!")),Object(i.b)("p",null,"You can also increase the specificity as needed by adding more exclamation\npoints, e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"display:none;!!")),Object(i.b)("h3",null,"Next steps"),Object(i.b)("p",null,"For additional detail about syntax, consult the\n",Object(i.b)("a",c({parentName:"p"},{href:"https://github.com/hacss/core/blob/master/src/Parser.purs"}),"parser source")," and\n",Object(i.b)("a",c({parentName:"p"},{href:"https://github.com/hacss/core/blob/master/test/Parser.purs"}),"corresponding tests"),".\nYou may also want to proceed to the ",Object(i.b)("a",c({parentName:"p"},{href:"/docs/configuration"}),"configuration guide"),"\nfor more information about how to use at-scopes and variables.")))}b.isMDXComponent=!0},"su+d":function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/syntax",function(){return n("9Tsb")}])}},[["su+d",0,2,1,3]]]);