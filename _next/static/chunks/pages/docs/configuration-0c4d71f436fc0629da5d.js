_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[13],{EtO7:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/configuration",function(){return t("tWlf")}])},tWlf:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return b}));var a=t("rePB"),r=t("Ff2n"),i=(t("q1tI"),t("7ljp")),o=t("xFV3");function p(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){Object(a.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var l={};function b(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",c(c(c({},l),t),{},{components:n,mdxType:"MDXLayout"}),Object(i.b)(o.a,{title:"Configuration",subtitle:"Use variables and at-scopes in style rules",mdxType:"Article"},Object(i.b)("p",null,"As outlined in the ",Object(i.b)("a",c({parentName:"p"},{href:"./syntax"}),"syntax guide"),", Hacss supports variables (i.e.\nnamed constants) and at-scopes (e.g. media queries). These features require a\nsmall amount of configuration."),Object(i.b)("h1",null,"Configuration Module"),Object(i.b)("p",null,"Both the ",Object(i.b)("a",c({parentName:"p"},{href:"./cli"}),"CLI")," and the ",Object(i.b)("a",c({parentName:"p"},{href:"./webpack"}),"Webpack integration")," will look for a\n",Object(i.b)("inlineCode",{parentName:"p"},"hacss.config.js")," file in the working directory (i.e. the project root). You can\nspecify an alternate configuration file path by using the explicit ",Object(i.b)("inlineCode",{parentName:"p"},"config"),"\noption. See the ",Object(i.b)("a",c({parentName:"p"},{href:"./cli"}),"CLI")," and ",Object(i.b)("a",c({parentName:"p"},{href:"./webpack"}),"Webpack")," guides for more\ninformation."),Object(i.b)("p",null,"The configuration module must export an object, which can contain either or both\nof the keys ",Object(i.b)("inlineCode",{parentName:"p"},"atScopes")," and ",Object(i.b)("inlineCode",{parentName:"p"},"variables"),"."),Object(i.b)("h1",null,Object(i.b)("inlineCode",{parentName:"h1"},"variables")),Object(i.b)("p",null,"This is a map of variables that can be used in style rules. A rule\n",Object(i.b)("inlineCode",{parentName:"p"},":hover{color:$red500}"),", for example, requires a corresponding key ",Object(i.b)("inlineCode",{parentName:"p"},"red500")," in\nthe ",Object(i.b)("inlineCode",{parentName:"p"},"variables")," map."),Object(i.b)("p",null,"You can also define variables for specific properties. For example, you may want\na variable ",Object(i.b)("inlineCode",{parentName:"p"},"small")," to have a different value depending on the CSS property where\nit is used: Properties like ",Object(i.b)("inlineCode",{parentName:"p"},"box-shadow"),", ",Object(i.b)("inlineCode",{parentName:"p"},"font-size"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"border-radius"),' might\nall have some notion of a "small" variant. To define a variable for a specific\nproperty, simply nest it within another map as shown in the configuration\nexample below.'),Object(i.b)("h2",null,"Example"),Object(i.b)("pre",null,Object(i.b)("code",c({parentName:"pre"},{className:"language-javascript"}),'exports.variables = {\n  red500: "#c33",\n  "box-shadow": {\n    small: "0 2px 2px #0003"\n  },\n  "font-size": {\n    small: "12px"\n  },\n  "border-radius": {\n    small: "2px"\n  }\n};\n')),Object(i.b)("h1",null,Object(i.b)("inlineCode",{parentName:"h1"},"atScopes")),Object(i.b)("p",null,"This is a map of at-scopes that can be used in style rules. A rule\n",Object(i.b)("inlineCode",{parentName:"p"},"@small{padding:0}"),", for example, requires a corresponding key ",Object(i.b)("inlineCode",{parentName:"p"},"small")," in the\n",Object(i.b)("inlineCode",{parentName:"p"},"atScopes")," map."),Object(i.b)("h2",null,"Example"),Object(i.b)("pre",null,Object(i.b)("code",c({parentName:"pre"},{className:"language-javascript"}),'exports.atScopes = {\n  small: "media only screen and (max-width: 599px)",\n  medium: "media only screen and (min-width: 600px) and (max-width: 1199px)",\n  large: "media only screen and (min-width: 1200px)",\n};\n'))))}b.isMDXComponent=!0}},[["EtO7",0,2,1,3,4]]]);